// This file was auto-generated by tools/GenerateAST.java
package com.craftinginterpreters.lox;

import java.util.List;

abstract class Statement {
	interface Visitor<R> {
		R visitExpressionStatementStatement(ExpressionStatement statement);
		R visitPrintStatementStatement(PrintStatement statement);
		R visitVariableDeclarationStatement(VariableDeclaration statement);
		R visitBlockStatementStatement(BlockStatement statement);
	}
	static class ExpressionStatement extends Statement {
		final Expression expression;

		@Override
		<R> R accept(Visitor<R> visitor) {
			return visitor.visitExpressionStatementStatement(this);
		}

		ExpressionStatement(Expression expression) {
			this.expression = expression;
		}
	}
	static class PrintStatement extends Statement {
		final Expression expression;

		@Override
		<R> R accept(Visitor<R> visitor) {
			return visitor.visitPrintStatementStatement(this);
		}

		PrintStatement(Expression expression) {
			this.expression = expression;
		}
	}
	static class VariableDeclaration extends Statement {
		final Token name;
		final Expression initializer;

		@Override
		<R> R accept(Visitor<R> visitor) {
			return visitor.visitVariableDeclarationStatement(this);
		}

		VariableDeclaration(Token name, Expression initializer) {
			this.name = name;
			this.initializer = initializer;
		}
	}
	static class BlockStatement extends Statement {
		final List<Statement> statements;

		@Override
		<R> R accept(Visitor<R> visitor) {
			return visitor.visitBlockStatementStatement(this);
		}

		BlockStatement(List<Statement> statements) {
			this.statements = statements;
		}
	}

	abstract <R> R accept(Visitor<R> visitor);
}
